# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  EM_CACHE_FOLDER: "emsdk-cache"

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [14.x]
        deno: [v1.3.3]

    steps:
      - uses: actions/checkout@v2
      - run: sudo apt update
      - name: Install utilities
        run:
          sudo apt install -y automake build-essential git pkg-config python
          python-pip unzip
      - name: Read emsdk version from Makefile
        run:
          echo "##[set-output name=EMSCRIPTEN_VERSION;]$(awk '{if($1
          =="EMSCRIPTEN_VERSION")print $3}' Makefile)"
        id: emsdk
      - name: Cache emsdk
        id: cache-system-libraries
        uses: actions/cache@v2
        with:
          path: ${{env.EM_CACHE_FOLDER}}
          key: ${{ steps.emsdk.outputs.EMSCRIPTEN_VERSION }}-${{ runner.os }}
      - name: Setup emsdk (use cache if found, create otherwise)
        uses: mymindstorm/setup-emsdk@v6
        with:
          version: ${{ steps.emsdk.outputs.EMSCRIPTEN_VERSION }}
          actions-cache-folder: ${{env.EM_CACHE_FOLDER}}
      - name: Install Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        env:
          RUNNER_TEMP: /tmp
        with:
          node-version: ${{ matrix.node }}
      - name: Install Deno ${{ matrix.deno }}
        run:
          curl -fsSL https://deno.land/x/install/install.sh | sudo
          DENO_INSTALL=/usr/local sh -s ${{ matrix.deno }}
      - name: Download and build dependencies
        run: make deps -j
        env:
          CI: true
      - name: Build and pack Viz.js
        run: make pack -j
        env:
          VIZ_VERSION: unreleased-${{ github.sha }}
      - name: Run tests
        run: make test -j
      - name: Upload artifact if tests are green
        if: success()
        uses: actions/upload-artifact@v1
        with:
          name: viz.js-unreleased-${{ github.sha }}.tar.gz
          path: sources/viz.js-vunreleased-${{ github.sha }}.tar.gz
